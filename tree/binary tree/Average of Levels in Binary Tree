/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void findavg(TreeNode* root,vector<pair<long,double>> &ans,int depth){
        if(root==NULL){
            return;
        }
        if(ans.size()<=depth){             
            ans.push_back({root->val,1});           
        }
        else{
            ans[depth].first += root->val;
            ans[depth].second++;
        }
        findavg(root->left,ans,depth+1);
        findavg(root->right,ans,depth+1);     
        
    }
    vector<double> averageOfLevels(TreeNode* root) {
      vector<pair<long,double>> ans;
        vector<double> ansf;
        findavg(root,ans,0);
        for(int i=0;i<ans.size();i++){
            ansf.push_back((double)ans[i].first/ans[i].second); 
        }
        return ansf;
    }
};
